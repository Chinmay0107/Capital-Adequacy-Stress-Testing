{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "029e6f8f-e485-47d1-9349-fb01daf65fee",
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-11-18 19:00:31.642 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\Users\\chinm\\anaconda\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "DeltaGenerator()"
      ]
     },
     "execution_count": 1,
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# 15 Predefined Scenarios\n",
    "SCENARIOS = {\n",
    "    \"Economic Recession\": {\"GDP Growth\": -5, \"Inflation\": 2, \"Loan Default Rate\": 10, \"Liquidity Drop\": 15},\n",
    "    \"High Inflation\": {\"GDP Growth\": 0, \"Inflation\": 8, \"Loan Default Rate\": 5, \"Liquidity Drop\": 10},\n",
    "    \"Market Crash\": {\"GDP Growth\": -3, \"Inflation\": 1, \"Loan Default Rate\": 12, \"Liquidity Drop\": 20},\n",
    "    \"Credit Crisis\": {\"GDP Growth\": -7, \"Inflation\": 3, \"Loan Default Rate\": 15, \"Liquidity Drop\": 25},\n",
    "    # Add additional scenarios here\n",
    "}\n",
    "\n",
    "# Function to calculate Capital Adequacy Ratio (CAR)\n",
    "def calculate_car(capital, rwa):\n",
    "    return (capital / rwa) * 100\n",
    "\n",
    "# Stress Test Function\n",
    "def perform_stress_test(scenario, capital, rwa, liquidity):\n",
    "    stress = SCENARIOS[scenario]\n",
    "    gdp_impact = stress[\"GDP Growth\"] * 0.01 * rwa\n",
    "    loan_defaults = stress[\"Loan Default Rate\"] * 0.01 * rwa\n",
    "    liquidity_drop = stress[\"Liquidity Drop\"] * 0.01 * liquidity\n",
    "\n",
    "    post_stress_rwa = rwa + loan_defaults\n",
    "    post_stress_capital = capital - loan_defaults - gdp_impact\n",
    "    post_stress_liquidity = liquidity - liquidity_drop\n",
    "\n",
    "    car = calculate_car(post_stress_capital, post_stress_rwa)\n",
    "    return car, post_stress_capital, post_stress_liquidity\n",
    "\n",
    "# Streamlit App\n",
    "st.title(\"Capital Adequacy Stress Testing Dashboard\")\n",
    "\n",
    "# User Inputs\n",
    "st.sidebar.header(\"Regulatory Inputs\")\n",
    "min_car = st.sidebar.number_input(\"Minimum CAR (%)\", value=8.0)\n",
    "initial_capital = st.sidebar.number_input(\"Initial Capital ($M)\", value=1000.0)\n",
    "initial_rwa = st.sidebar.number_input(\"Initial Risk-Weighted Assets (RWA) ($M)\", value=5000.0)\n",
    "initial_liquidity = st.sidebar.number_input(\"Initial Liquidity ($M)\", value=2000.0)\n",
    "\n",
    "st.sidebar.header(\"Scenario Selection\")\n",
    "selected_scenario = st.sidebar.selectbox(\"Select Stress Testing Scenario\", list(SCENARIOS.keys()))\n",
    "\n",
    "# Perform Stress Test\n",
    "car, post_capital, post_liquidity = perform_stress_test(\n",
    "    selected_scenario, initial_capital, initial_rwa, initial_liquidity\n",
    ")\n",
    "\n",
    "# Display Results\n",
    "st.subheader(f\"Results for {selected_scenario}\")\n",
    "st.write(f\"**Post-Stress Capital Adequacy Ratio (CAR):** {car:.2f}%\")\n",
    "st.write(f\"**Post-Stress Capital:** ${post_capital:.2f}M\")\n",
    "st.write(f\"**Post-Stress Liquidity:** ${post_liquidity:.2f}M\")\n",
    "\n",
    "if car < min_car:\n",
    "    st.error(\"Warning: CAR is below the regulatory minimum!\")\n",
    "else:\n",
    "    st.success(\"CAR meets the regulatory requirements.\")\n",
    "\n",
    "# Visualization\n",
    "st.subheader(\"Capital Adequacy Over Scenarios\")\n",
    "scenario_names = list(SCENARIOS.keys())\n",
    "car_values = [\n",
    "    perform_stress_test(scenario, initial_capital, initial_rwa, initial_liquidity)[0]\n",
    "    for scenario in scenario_names\n",
    "]\n",
    "\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.bar(scenario_names, car_values, color=\"skyblue\")\n",
    "plt.axhline(min_car, color=\"red\", linestyle=\"--\", label=\"Regulatory Minimum\")\n",
    "plt.xticks(rotation=45, fontsize=10)\n",
    "plt.ylabel(\"CAR (%)\")\n",
    "plt.title(\"Capital Adequacy Ratio Across Scenarios\")\n",
    "plt.legend()\n",
    "st.pyplot(plt)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3249f264-8bf2-4907-9922-02637373fd39",
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "illegal target for annotation (1528389659.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[8], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    \"execution_count\": null,\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m illegal target for annotation\n"
     ]
    }
   ],
   "source": [
    "\"execution_count\": null,\n"
   ]
  },
  {
   "cell_type": "code",
   "id": "50fc0548-511d-46aa-84ef-46c27ea81cfe",
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
